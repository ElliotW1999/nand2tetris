// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    RAM4K(in=in,load=RAM4K-0load,out=RAM4K-0,address=address[0..11]);
    RAM4K(in=in,load=RAM4K-1load,out=RAM4K-1,address=address[0..11]);
    RAM4K(in=in,load=RAM4K-2load,out=RAM4K-2,address=address[0..11]);
    RAM4K(in=in,load=RAM4K-3load,out=RAM4K-3,address=address[0..11]);
	
	DMux4Way(in=load,sel=address[12..13],a=RAM4K-0load,b=RAM4K-1load,c=RAM4K-2load,d=RAM4K-3load);
	Mux4Way16(a=RAM4K-0,b=RAM4K-1,c=RAM4K-2,d=RAM4K-3,sel=address[12..13],out=out);

}