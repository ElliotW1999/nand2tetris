// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    RAM8(in=in,load=RAM8-0load,out=RAM8-0,address=address[0..2]);
    RAM8(in=in,load=RAM8-1load,out=RAM8-1,address=address[0..2]);
    RAM8(in=in,load=RAM8-2load,out=RAM8-2,address=address[0..2]);
    RAM8(in=in,load=RAM8-3load,out=RAM8-3,address=address[0..2]);
    RAM8(in=in,load=RAM8-4load,out=RAM8-4,address=address[0..2]);
    RAM8(in=in,load=RAM8-5load,out=RAM8-5,address=address[0..2]);
    RAM8(in=in,load=RAM8-6load,out=RAM8-6,address=address[0..2]);
    RAM8(in=in,load=RAM8-7load,out=RAM8-7,address=address[0..2]);
	
	DMux8Way(in=load,sel=address[3..5],a=RAM8-0load,b=RAM8-1load,c=RAM8-2load,d=RAM8-3load,e=RAM8-4load,f=RAM8-5load,g=RAM8-6load,h=RAM8-7load);
	Mux8Way16(a=RAM8-0,b=RAM8-1,c=RAM8-2,d=RAM8-3,e=RAM8-4,f=RAM8-5,g=RAM8-6,h=RAM8-7,sel=address[3..5],out=out);
}