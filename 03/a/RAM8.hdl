// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    Register(in=in,load=register0load,out=register0);
    Register(in=in,load=register1load,out=register1);
    Register(in=in,load=register2load,out=register2);
    Register(in=in,load=register3load,out=register3);
    Register(in=in,load=register4load,out=register4);
    Register(in=in,load=register5load,out=register5);
    Register(in=in,load=register6load,out=register6);
    Register(in=in,load=register7load,out=register7);

	DMux8Way(in=load,sel=address,a=register0load,b=register1load,c=register2load,d=register3load,e=register4load,f=register5load,g=register6load,h=register7load);
	Mux8Way16(a=register0,b=register1,c=register2,d=register3,e=register4,f=register5,g=register6,h=register7,sel=address,out=out);
	
}