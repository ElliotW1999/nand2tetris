@256
D=A
@SP
M=D
@return$0
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@0
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(return$0)
// function Main.main 2
(Main.main)
@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

// call Snake.new 0
@return$1
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@0
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Snake.new
0;JMP
(return$1)
// pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label WHILE_EXP0
(Main.main$WHILE_EXP0)
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// not
@SP
A=M-1
M=-M
M=M-1
// if-goto WHILE_END0
D=M
@Main.main$WHILE_END0
D;JNE
// call Keyboard.keyPressed 0
@return$2
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@0
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Keyboard.keyPressed
0;JMP
(return$2)
// pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// call Snake.direction 2
@return$3
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Snake.direction
0;JMP
(return$3)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// call Snake.update 1
@return$4
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Snake.update
0;JMP
(return$4)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 100
@100
D=A
@SP
M=M+1
A=M-1
M=D
// call Sys.wait 1
@return$5
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.wait
0;JMP
(return$5)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// goto WHILE_EXP0
@Main.main$WHILE_EXP0
0;JMP
// label WHILE_END0
(Main.main$WHILE_END0)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Snake.new 0
(Snake.new)
// push constant 5
@5
D=A
@SP
M=M+1
A=M-1
M=D
// call Memory.alloc 1
@return$6
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.alloc
0;JMP
(return$6)
// pop pointer 0
@SP
AM=M-1
D=M
@3
M=D
// push constant 35
@35
D=A
@SP
M=M+1
A=M-1
M=D
// pop this 1
@1
D=A
@THIS
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push constant 35
@35
D=A
@SP
M=M+1
A=M-1
M=D
// pop this 2
@2
D=A
@THIS
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// call Array.new 1
@return$7
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(return$7)
// pop this 3
@3
D=A
@THIS
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
// call Array.new 1
@return$8
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(return$8)
// pop this 4
@4
D=A
@THIS
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push this 4
@4
D=A
@THIS
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push this 1
@1
D=A
@THIS
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// push this 4
@4
D=A
@THIS
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push this 2
@2
D=A
@THIS
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push this 3
@3
D=A
@THIS
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push this 4
@4
D=A
@THIS
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push pointer 0
@3
D=M
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Snake.direction 0
(Snake.direction)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop pointer 0
@SP
AM=M-1
D=M
@3
M=D
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 131
@131
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@eq1
D;JEQ
@SP
A=M-1
M=1
(eq1)
@SP
A=M-1
M=M-1
// if-goto IF_TRUE0
D=M
@Snake.direction$IF_TRUE0
D;JNE
// goto IF_FALSE0
@Snake.direction$IF_FALSE0
0;JMP
// label IF_TRUE0
(Snake.direction$IF_TRUE0)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop this 1
@1
D=A
@THIS
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// neg
@SP
A=M-1
M=-M
// pop this 2
@2
D=A
@THIS
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label IF_FALSE0
(Snake.direction$IF_FALSE0)
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 133
@133
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@eq1
D;JEQ
@SP
A=M-1
M=1
(eq1)
@SP
A=M-1
M=M-1
// if-goto IF_TRUE1
D=M
@Snake.direction$IF_TRUE1
D;JNE
// goto IF_FALSE1
@Snake.direction$IF_FALSE1
0;JMP
// label IF_TRUE1
(Snake.direction$IF_TRUE1)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop this 1
@1
D=A
@THIS
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// pop this 2
@2
D=A
@THIS
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label IF_FALSE1
(Snake.direction$IF_FALSE1)
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 130
@130
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@eq1
D;JEQ
@SP
A=M-1
M=1
(eq1)
@SP
A=M-1
M=M-1
// if-goto IF_TRUE2
D=M
@Snake.direction$IF_TRUE2
D;JNE
// goto IF_FALSE2
@Snake.direction$IF_FALSE2
0;JMP
// label IF_TRUE2
(Snake.direction$IF_TRUE2)
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// neg
@SP
A=M-1
M=-M
// pop this 1
@1
D=A
@THIS
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop this 2
@2
D=A
@THIS
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label IF_FALSE2
(Snake.direction$IF_FALSE2)
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 132
@132
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@eq1
D;JEQ
@SP
A=M-1
M=1
(eq1)
@SP
A=M-1
M=M-1
// if-goto IF_TRUE3
D=M
@Snake.direction$IF_TRUE3
D;JNE
// goto IF_FALSE3
@Snake.direction$IF_FALSE3
0;JMP
// label IF_TRUE3
(Snake.direction$IF_TRUE3)
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// pop this 1
@1
D=A
@THIS
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop this 2
@2
D=A
@THIS
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label IF_FALSE3
(Snake.direction$IF_FALSE3)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Snake.update 0
(Snake.update)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop pointer 0
@SP
AM=M-1
D=M
@3
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Screen.setColor 1
@return$9
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.setColor
0;JMP
(return$9)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push this 4
@4
D=A
@THIS
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// push this 4
@4
D=A
@THIS
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// call Screen.drawPixel 2
@return$10
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawPixel
0;JMP
(return$10)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push this 4
@4
D=A
@THIS
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push this 4
@4
D=A
@THIS
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push this 1
@1
D=A
@THIS
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// push this 4
@4
D=A
@THIS
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// push this 4
@4
D=A
@THIS
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push this 2
@2
D=A
@THIS
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// not
@SP
A=M-1
M=-M
M=M-1
// call Screen.setColor 1
@return$11
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.setColor
0;JMP
(return$11)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push this 4
@4
D=A
@THIS
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// push this 4
@4
D=A
@THIS
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// call Screen.drawPixel 2
@return$12
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawPixel
0;JMP
(return$12)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
