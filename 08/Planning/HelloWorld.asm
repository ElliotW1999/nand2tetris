@256
D=A
@SP
M=D
@return$0
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@0
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(return$0)
// function Array.new 0
(Array.new)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// not
@SP
A=M-1
M=-M
M=M-1
// if-goto IF_TRUE0
D=M
@Array.new$IF_TRUE0
D;JNE
// goto IF_FALSE0
@Array.new$IF_FALSE0
0;JMP
// label IF_TRUE0
(Array.new$IF_TRUE0)
// push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
// call Sys.error 1
@return$1
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(return$1)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// label IF_FALSE0
(Array.new$IF_FALSE0)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// call Memory.alloc 1
@return$2
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.alloc
0;JMP
(return$2)
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Array.dispose 0
(Array.dispose)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop pointer 0
@SP
AM=M-1
D=M
@3
M=D
// push pointer 0
@3
D=M
@SP
M=M+1
A=M-1
M=D
// call Memory.deAlloc 1
@return$3
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.deAlloc
0;JMP
(return$3)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Keyboard.init 0
(Keyboard.init)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Keyboard.keyPressed 0
(Keyboard.keyPressed)
// push constant 24576
@24576
D=A
@SP
M=M+1
A=M-1
M=D
// call Memory.peek 1
@return$4
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.peek
0;JMP
(return$4)
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Keyboard.readChar 2
(Keyboard.readChar)
@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.printChar 1
@return$5
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printChar
0;JMP
(return$5)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// label WHILE_EXP0
(Keyboard.readChar$WHILE_EXP0)
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@eq1
D;JEQ
@SP
A=M-1
M=1
(eq1)
@SP
A=M-1
M=M-1
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// or
@SP
AM=M-1
D=M
A=A-1
M=D|M
// not
@SP
A=M-1
M=-M
M=M-1
// if-goto WHILE_END0
D=M
@Keyboard.readChar$WHILE_END0
D;JNE
// call Keyboard.keyPressed 0
@return$6
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@0
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Keyboard.keyPressed
0;JMP
(return$6)
// pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// if-goto IF_TRUE0
D=M
@Keyboard.readChar$IF_TRUE0
D;JNE
// goto IF_FALSE0
@Keyboard.readChar$IF_FALSE0
0;JMP
// label IF_TRUE0
(Keyboard.readChar$IF_TRUE0)
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label IF_FALSE0
(Keyboard.readChar$IF_FALSE0)
// goto WHILE_EXP0
@Keyboard.readChar$WHILE_EXP0
0;JMP
// label WHILE_END0
(Keyboard.readChar$WHILE_END0)
// call String.backSpace 0
@return$7
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@0
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.backSpace
0;JMP
(return$7)
// call Output.printChar 1
@return$8
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printChar
0;JMP
(return$8)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// call Output.printChar 1
@return$9
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printChar
0;JMP
(return$9)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Keyboard.readLine 5
(Keyboard.readLine)
@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

// push constant 80
@80
D=A
@SP
M=M+1
A=M-1
M=D
// call String.new 1
@return$10
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.new
0;JMP
(return$10)
// pop local 3
@3
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// call Output.printString 1
@return$11
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printString
0;JMP
(return$11)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// call String.newLine 0
@return$12
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@0
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.newLine
0;JMP
(return$12)
// pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// call String.backSpace 0
@return$13
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@0
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.backSpace
0;JMP
(return$13)
// pop local 2
@2
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label WHILE_EXP0
(Keyboard.readLine$WHILE_EXP0)
// push local 4
@4
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// not
@SP
A=M-1
M=-M
M=M-1
// not
@SP
A=M-1
M=-M
M=M-1
// if-goto WHILE_END0
D=M
@Keyboard.readLine$WHILE_END0
D;JNE
// call Keyboard.readChar 0
@return$14
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@0
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Keyboard.readChar
0;JMP
(return$14)
// pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// eq
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@eq1
D;JEQ
@SP
A=M-1
M=1
(eq1)
@SP
A=M-1
M=M-1
// pop local 4
@4
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 4
@4
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// not
@SP
A=M-1
M=-M
M=M-1
// if-goto IF_TRUE0
D=M
@Keyboard.readLine$IF_TRUE0
D;JNE
// goto IF_FALSE0
@Keyboard.readLine$IF_FALSE0
0;JMP
// label IF_TRUE0
(Keyboard.readLine$IF_TRUE0)
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// eq
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@eq1
D;JEQ
@SP
A=M-1
M=1
(eq1)
@SP
A=M-1
M=M-1
// if-goto IF_TRUE1
D=M
@Keyboard.readLine$IF_TRUE1
D;JNE
// goto IF_FALSE1
@Keyboard.readLine$IF_FALSE1
0;JMP
// label IF_TRUE1
(Keyboard.readLine$IF_TRUE1)
// push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// call String.eraseLastChar 1
@return$15
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.eraseLastChar
0;JMP
(return$15)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// goto IF_END1
@Keyboard.readLine$IF_END1
0;JMP
// label IF_FALSE1
(Keyboard.readLine$IF_FALSE1)
// push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@return$16
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(return$16)
// pop local 3
@3
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label IF_END1
(Keyboard.readLine$IF_END1)
// label IF_FALSE0
(Keyboard.readLine$IF_FALSE0)
// goto WHILE_EXP0
@Keyboard.readLine$WHILE_EXP0
0;JMP
// label WHILE_END0
(Keyboard.readLine$WHILE_END0)
// push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Keyboard.readInt 2
(Keyboard.readInt)
@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// call Keyboard.readLine 1
@return$17
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Keyboard.readLine
0;JMP
(return$17)
// pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// call String.intValue 1
@return$18
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.intValue
0;JMP
(return$18)
// pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// call String.dispose 1
@return$19
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.dispose
0;JMP
(return$19)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Main.main 0
(Main.main)
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// call String.new 1
@return$20
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.new
0;JMP
(return$20)
// push constant 72
@72
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@return$21
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(return$21)
// push constant 101
@101
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@return$22
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(return$22)
// push constant 108
@108
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@return$23
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(return$23)
// push constant 108
@108
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@return$24
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(return$24)
// push constant 111
@111
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@return$25
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(return$25)
// push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@return$26
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(return$26)
// push constant 119
@119
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@return$27
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(return$27)
// push constant 111
@111
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@return$28
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(return$28)
// push constant 114
@114
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@return$29
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(return$29)
// push constant 108
@108
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@return$30
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(return$30)
// push constant 100
@100
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@return$31
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(return$31)
// push constant 33
@33
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@return$32
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(return$32)
// call Output.printString 1
@return$33
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printString
0;JMP
(return$33)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// call Output.println 0
@return$34
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@0
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.println
0;JMP
(return$34)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Math.init 1
(Math.init)
@0
D=A
@SP
M=M+1
A=M-1
M=D

// push constant 16
@16
D=A
@SP
M=M+1
A=M-1
M=D
// call Array.new 1
@return$35
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(return$35)
// pop static 1
@SP
AM=M-1
D=M
@Math.vm1
M=D
// push constant 16
@16
D=A
@SP
M=M+1
A=M-1
M=D
// call Array.new 1
@return$36
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(return$36)
// pop static 0
@SP
AM=M-1
D=M
@Math.vm0
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push static 0
@Math.vm0
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label WHILE_EXP0
(Math.init$WHILE_EXP0)
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// not
@SP
A=M-1
M=-M
M=M-1
// if-goto WHILE_END0
D=M
@Math.init$WHILE_END0
D;JNE
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push static 0
@Math.vm0
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// push static 0
@Math.vm0
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// push static 0
@Math.vm0
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// goto WHILE_EXP0
@Math.init$WHILE_EXP0
0;JMP
// label WHILE_END0
(Math.init$WHILE_END0)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Math.abs 0
(Math.abs)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// if-goto IF_TRUE0
D=M
@Math.abs$IF_TRUE0
D;JNE
// goto IF_FALSE0
@Math.abs$IF_FALSE0
0;JMP
// label IF_TRUE0
(Math.abs$IF_TRUE0)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// neg
@SP
A=M-1
M=-M
// pop argument 0
@0
D=A
@ARG
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label IF_FALSE0
(Math.abs$IF_FALSE0)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Math.multiply 5
(Math.multiply)
@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// and
@SP
AM=M-1
D=M
A=A-1
M=D&M
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// and
@SP
AM=M-1
D=M
A=A-1
M=D&M
// or
@SP
AM=M-1
D=M
A=A-1
M=D|M
// pop local 4
@4
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// call Math.abs 1
@return$37
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.abs
0;JMP
(return$37)
// pop argument 0
@0
D=A
@ARG
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// call Math.abs 1
@return$38
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.abs
0;JMP
(return$38)
// pop argument 1
@1
D=A
@ARG
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// if-goto IF_TRUE0
D=M
@Math.multiply$IF_TRUE0
D;JNE
// goto IF_FALSE0
@Math.multiply$IF_FALSE0
0;JMP
// label IF_TRUE0
(Math.multiply$IF_TRUE0)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop argument 0
@0
D=A
@ARG
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop argument 1
@1
D=A
@ARG
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label IF_FALSE0
(Math.multiply$IF_FALSE0)
// label WHILE_EXP0
(Math.multiply$WHILE_EXP0)
// push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// not
@SP
A=M-1
M=-M
M=M-1
// if-goto WHILE_END0
D=M
@Math.multiply$WHILE_END0
D;JNE
// push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push static 0
@Math.vm0
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// and
@SP
AM=M-1
D=M
A=A-1
M=D&M
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@eq1
D;JEQ
@SP
A=M-1
M=1
(eq1)
@SP
A=M-1
M=M-1
// not
@SP
A=M-1
M=-M
M=M-1
// if-goto IF_TRUE1
D=M
@Math.multiply$IF_TRUE1
D;JNE
// goto IF_FALSE1
@Math.multiply$IF_FALSE1
0;JMP
// label IF_TRUE1
(Math.multiply$IF_TRUE1)
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push static 0
@Math.vm0
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop local 2
@2
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label IF_FALSE1
(Math.multiply$IF_FALSE1)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop argument 0
@0
D=A
@ARG
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop local 3
@3
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// goto WHILE_EXP0
@Math.multiply$WHILE_EXP0
0;JMP
// label WHILE_END0
(Math.multiply$WHILE_END0)
// push local 4
@4
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// if-goto IF_TRUE2
D=M
@Math.multiply$IF_TRUE2
D;JNE
// goto IF_FALSE2
@Math.multiply$IF_FALSE2
0;JMP
// label IF_TRUE2
(Math.multiply$IF_TRUE2)
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// neg
@SP
A=M-1
M=-M
// pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label IF_FALSE2
(Math.multiply$IF_FALSE2)
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Math.divide 4
(Math.divide)
@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@eq1
D;JEQ
@SP
A=M-1
M=1
(eq1)
@SP
A=M-1
M=M-1
// if-goto IF_TRUE0
D=M
@Math.divide$IF_TRUE0
D;JNE
// goto IF_FALSE0
@Math.divide$IF_FALSE0
0;JMP
// label IF_TRUE0
(Math.divide$IF_TRUE0)
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// call Sys.error 1
@return$39
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(return$39)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// label IF_FALSE0
(Math.divide$IF_FALSE0)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// and
@SP
AM=M-1
D=M
A=A-1
M=D&M
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// and
@SP
AM=M-1
D=M
A=A-1
M=D&M
// or
@SP
AM=M-1
D=M
A=A-1
M=D|M
// pop local 2
@2
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push static 1
@Math.vm1
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// call Math.abs 1
@return$40
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.abs
0;JMP
(return$40)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// call Math.abs 1
@return$41
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.abs
0;JMP
(return$41)
// pop argument 0
@0
D=A
@ARG
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label WHILE_EXP0
(Math.divide$WHILE_EXP0)
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// not
@SP
A=M-1
M=-M
M=M-1
// and
@SP
AM=M-1
D=M
A=A-1
M=D&M
// not
@SP
A=M-1
M=-M
M=M-1
// if-goto WHILE_END0
D=M
@Math.divide$WHILE_END0
D;JNE
// push constant 32767
@32767
D=A
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push static 1
@Math.vm1
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push static 1
@Math.vm1
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// pop local 3
@3
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// not
@SP
A=M-1
M=-M
M=M-1
// if-goto IF_TRUE1
D=M
@Math.divide$IF_TRUE1
D;JNE
// goto IF_FALSE1
@Math.divide$IF_FALSE1
0;JMP
// label IF_TRUE1
(Math.divide$IF_TRUE1)
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push static 1
@Math.vm1
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push static 1
@Math.vm1
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push static 1
@Math.vm1
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push static 1
@Math.vm1
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// pop local 3
@3
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// not
@SP
A=M-1
M=-M
M=M-1
// if-goto IF_TRUE2
D=M
@Math.divide$IF_TRUE2
D;JNE
// goto IF_FALSE2
@Math.divide$IF_FALSE2
0;JMP
// label IF_TRUE2
(Math.divide$IF_TRUE2)
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label IF_FALSE2
(Math.divide$IF_FALSE2)
// label IF_FALSE1
(Math.divide$IF_FALSE1)
// goto WHILE_EXP0
@Math.divide$WHILE_EXP0
0;JMP
// label WHILE_END0
(Math.divide$WHILE_END0)
// label WHILE_EXP1
(Math.divide$WHILE_EXP1)
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// neg
@SP
A=M-1
M=-M
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// not
@SP
A=M-1
M=-M
M=M-1
// if-goto WHILE_END1
D=M
@Math.divide$WHILE_END1
D;JNE
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push static 1
@Math.vm1
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// not
@SP
A=M-1
M=-M
M=M-1
// if-goto IF_TRUE3
D=M
@Math.divide$IF_TRUE3
D;JNE
// goto IF_FALSE3
@Math.divide$IF_FALSE3
0;JMP
// label IF_TRUE3
(Math.divide$IF_TRUE3)
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push static 0
@Math.vm0
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push static 1
@Math.vm1
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// pop argument 0
@0
D=A
@ARG
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label IF_FALSE3
(Math.divide$IF_FALSE3)
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// goto WHILE_EXP1
@Math.divide$WHILE_EXP1
0;JMP
// label WHILE_END1
(Math.divide$WHILE_END1)
// push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// if-goto IF_TRUE4
D=M
@Math.divide$IF_TRUE4
D;JNE
// goto IF_FALSE4
@Math.divide$IF_FALSE4
0;JMP
// label IF_TRUE4
(Math.divide$IF_TRUE4)
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// neg
@SP
A=M-1
M=-M
// pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label IF_FALSE4
(Math.divide$IF_FALSE4)
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Math.sqrt 4
(Math.sqrt)
@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// if-goto IF_TRUE0
D=M
@Math.sqrt$IF_TRUE0
D;JNE
// goto IF_FALSE0
@Math.sqrt$IF_FALSE0
0;JMP
// label IF_TRUE0
(Math.sqrt$IF_TRUE0)
// push constant 4
@4
D=A
@SP
M=M+1
A=M-1
M=D
// call Sys.error 1
@return$42
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(return$42)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// label IF_FALSE0
(Math.sqrt$IF_FALSE0)
// push constant 7
@7
D=A
@SP
M=M+1
A=M-1
M=D
// pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label WHILE_EXP0
(Math.sqrt$WHILE_EXP0)
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// neg
@SP
A=M-1
M=-M
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// not
@SP
A=M-1
M=-M
M=M-1
// if-goto WHILE_END0
D=M
@Math.sqrt$WHILE_END0
D;JNE
// push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push static 0
@Math.vm0
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// call Math.multiply 2
@return$43
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(return$43)
// pop local 2
@2
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// not
@SP
A=M-1
M=-M
M=M-1
// push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// not
@SP
A=M-1
M=-M
M=M-1
// and
@SP
AM=M-1
D=M
A=A-1
M=D&M
// if-goto IF_TRUE1
D=M
@Math.sqrt$IF_TRUE1
D;JNE
// goto IF_FALSE1
@Math.sqrt$IF_FALSE1
0;JMP
// label IF_TRUE1
(Math.sqrt$IF_TRUE1)
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop local 3
@3
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label IF_FALSE1
(Math.sqrt$IF_FALSE1)
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// goto WHILE_EXP0
@Math.sqrt$WHILE_EXP0
0;JMP
// label WHILE_END0
(Math.sqrt$WHILE_END0)
// push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Math.max 0
(Math.max)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// if-goto IF_TRUE0
D=M
@Math.max$IF_TRUE0
D;JNE
// goto IF_FALSE0
@Math.max$IF_FALSE0
0;JMP
// label IF_TRUE0
(Math.max$IF_TRUE0)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop argument 1
@1
D=A
@ARG
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label IF_FALSE0
(Math.max$IF_FALSE0)
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Math.min 0
(Math.min)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// if-goto IF_TRUE0
D=M
@Math.min$IF_TRUE0
D;JNE
// goto IF_FALSE0
@Math.min$IF_FALSE0
0;JMP
// label IF_TRUE0
(Math.min$IF_TRUE0)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop argument 1
@1
D=A
@ARG
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label IF_FALSE0
(Math.min$IF_FALSE0)
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Memory.init 0
(Memory.init)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop static 0
@SP
AM=M-1
D=M
@Memory.vm0
M=D
// push constant 2048
@2048
D=A
@SP
M=M+1
A=M-1
M=D
// push static 0
@Memory.vm0
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push constant 14334
@14334
D=A
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push constant 2049
@2049
D=A
@SP
M=M+1
A=M-1
M=D
// push static 0
@Memory.vm0
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push constant 2050
@2050
D=A
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Memory.peek 0
(Memory.peek)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push static 0
@Memory.vm0
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Memory.poke 0
(Memory.poke)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push static 0
@Memory.vm0
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Memory.alloc 1
(Memory.alloc)
@0
D=A
@SP
M=M+1
A=M-1
M=D

// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// if-goto IF_TRUE0
D=M
@Memory.alloc$IF_TRUE0
D;JNE
// goto IF_FALSE0
@Memory.alloc$IF_FALSE0
0;JMP
// label IF_TRUE0
(Memory.alloc$IF_TRUE0)
// push constant 5
@5
D=A
@SP
M=M+1
A=M-1
M=D
// call Sys.error 1
@return$44
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(return$44)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// label IF_FALSE0
(Memory.alloc$IF_FALSE0)
// push constant 2048
@2048
D=A
@SP
M=M+1
A=M-1
M=D
// pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label WHILE_EXP0
(Memory.alloc$WHILE_EXP0)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// not
@SP
A=M-1
M=-M
M=M-1
// if-goto WHILE_END0
D=M
@Memory.alloc$WHILE_END0
D;JNE
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// goto WHILE_EXP0
@Memory.alloc$WHILE_EXP0
0;JMP
// label WHILE_END0
(Memory.alloc$WHILE_END0)
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push constant 16379
@16379
D=A
@SP
M=M+1
A=M-1
M=D
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// if-goto IF_TRUE1
D=M
@Memory.alloc$IF_TRUE1
D;JNE
// goto IF_FALSE1
@Memory.alloc$IF_FALSE1
0;JMP
// label IF_TRUE1
(Memory.alloc$IF_TRUE1)
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// call Sys.error 1
@return$45
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(return$45)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// label IF_FALSE1
(Memory.alloc$IF_FALSE1)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// if-goto IF_TRUE2
D=M
@Memory.alloc$IF_TRUE2
D;JNE
// goto IF_FALSE2
@Memory.alloc$IF_FALSE2
0;JMP
// label IF_TRUE2
(Memory.alloc$IF_TRUE2)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// eq
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@eq1
D;JEQ
@SP
A=M-1
M=1
(eq1)
@SP
A=M-1
M=M-1
// if-goto IF_TRUE3
D=M
@Memory.alloc$IF_TRUE3
D;JNE
// goto IF_FALSE3
@Memory.alloc$IF_FALSE3
0;JMP
// label IF_TRUE3
(Memory.alloc$IF_TRUE3)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push constant 4
@4
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// goto IF_END3
@Memory.alloc$IF_END3
0;JMP
// label IF_FALSE3
(Memory.alloc$IF_FALSE3)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label IF_END3
(Memory.alloc$IF_END3)
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label IF_FALSE2
(Memory.alloc$IF_FALSE2)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Memory.deAlloc 2
(Memory.deAlloc)
@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@eq1
D;JEQ
@SP
A=M-1
M=1
(eq1)
@SP
A=M-1
M=M-1
// if-goto IF_TRUE0
D=M
@Memory.deAlloc$IF_TRUE0
D;JNE
// goto IF_FALSE0
@Memory.deAlloc$IF_FALSE0
0;JMP
// label IF_TRUE0
(Memory.deAlloc$IF_TRUE0)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// goto IF_END0
@Memory.deAlloc$IF_END0
0;JMP
// label IF_FALSE0
(Memory.deAlloc$IF_FALSE0)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// eq
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@eq1
D;JEQ
@SP
A=M-1
M=1
(eq1)
@SP
A=M-1
M=M-1
// if-goto IF_TRUE1
D=M
@Memory.deAlloc$IF_TRUE1
D;JNE
// goto IF_FALSE1
@Memory.deAlloc$IF_FALSE1
0;JMP
// label IF_TRUE1
(Memory.deAlloc$IF_TRUE1)
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// goto IF_END1
@Memory.deAlloc$IF_END1
0;JMP
// label IF_FALSE1
(Memory.deAlloc$IF_FALSE1)
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label IF_END1
(Memory.deAlloc$IF_END1)
// label IF_END0
(Memory.deAlloc$IF_END0)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Output.init 0
(Output.init)
// push constant 16384
@16384
D=A
@SP
M=M+1
A=M-1
M=D
// pop static 4
@SP
AM=M-1
D=M
@Output.vm4
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// not
@SP
A=M-1
M=-M
M=M-1
// pop static 2
@SP
AM=M-1
D=M
@Output.vm2
M=D
// push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
// pop static 1
@SP
AM=M-1
D=M
@Output.vm1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop static 0
@SP
AM=M-1
D=M
@Output.vm0
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// call String.new 1
@return$46
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.new
0;JMP
(return$46)
// pop static 3
@SP
AM=M-1
D=M
@Output.vm3
M=D
// call Output.initMap 0
@return$47
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@0
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.initMap
0;JMP
(return$47)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// call Output.createShiftedMap 0
@return$48
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@0
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.createShiftedMap
0;JMP
(return$48)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Output.initMap 0
(Output.initMap)
// push constant 127
@127
D=A
@SP
M=M+1
A=M-1
M=D
// call Array.new 1
@return$49
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(return$49)
// pop static 5
@SP
AM=M-1
D=M
@Output.vm5
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$50
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$50)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$51
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$51)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 33
@33
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$52
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$52)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 34
@34
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 20
@20
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$53
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$53)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 35
@35
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 18
@18
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 18
@18
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 18
@18
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 18
@18
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 18
@18
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 18
@18
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$54
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$54)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 36
@36
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$55
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$55)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 37
@37
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 35
@35
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 49
@49
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$56
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$56)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 38
@38
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$57
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$57)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 39
@39
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$58
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$58)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 40
@40
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$59
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$59)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 41
@41
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$60
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$60)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 42
@42
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$61
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$61)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 43
@43
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$62
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$62)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 44
@44
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$63
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$63)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 45
@45
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$64
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$64)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 46
@46
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$65
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$65)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 47
@47
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$66
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$66)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$67
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$67)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 49
@49
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 14
@14
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$68
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$68)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 50
@50
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$69
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$69)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 28
@28
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$70
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$70)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 52
@52
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 16
@16
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 28
@28
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 26
@26
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 25
@25
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 60
@60
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$71
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$71)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 53
@53
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 31
@31
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$72
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$72)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 28
@28
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 31
@31
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$73
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$73)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 55
@55
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 49
@49
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$74
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$74)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 56
@56
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$75
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$75)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 57
@57
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 62
@62
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 14
@14
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$76
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$76)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 58
@58
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$77
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$77)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 59
@59
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$78
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$78)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 60
@60
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$79
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$79)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 61
@61
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$80
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$80)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 62
@62
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$81
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$81)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 64
@64
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 59
@59
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 59
@59
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 59
@59
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$82
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$82)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$83
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$83)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 65
@65
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$84
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$84)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 66
@66
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 31
@31
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 31
@31
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 31
@31
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$85
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$85)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 67
@67
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 28
@28
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 35
@35
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 35
@35
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 28
@28
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$86
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$86)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 68
@68
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$87
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$87)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 69
@69
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 35
@35
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 11
@11
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 11
@11
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 35
@35
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$88
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$88)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 70
@70
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 35
@35
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 11
@11
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 11
@11
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$89
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$89)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 71
@71
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 28
@28
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 35
@35
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 59
@59
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 44
@44
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$90
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$90)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 72
@72
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$91
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$91)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 73
@73
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$92
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$92)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 74
@74
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 60
@60
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 14
@14
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$93
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$93)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 75
@75
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$94
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$94)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 76
@76
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 35
@35
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$95
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$95)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 77
@77
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 33
@33
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$96
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$96)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 78
@78
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 55
@55
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 55
@55
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 59
@59
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 59
@59
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$97
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$97)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 79
@79
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$98
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$98)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 80
@80
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 31
@31
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 31
@31
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$99
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$99)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 81
@81
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 59
@59
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$100
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$100)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 82
@82
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 31
@31
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 31
@31
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$101
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$101)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 83
@83
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 28
@28
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$102
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$102)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 84
@84
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 45
@45
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$103
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$103)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 85
@85
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$104
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$104)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 86
@86
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$105
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$105)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 87
@87
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 18
@18
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$106
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$106)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 88
@88
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$107
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$107)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 89
@89
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$108
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$108)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 90
@90
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 49
@49
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 35
@35
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$109
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$109)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 91
@91
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$110
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$110)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 92
@92
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$111
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$111)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 93
@93
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$112
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$112)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 94
@94
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 8
@8
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 28
@28
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$113
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$113)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 95
@95
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$114
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$114)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 96
@96
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$115
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$115)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 97
@97
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 14
@14
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$116
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$116)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 98
@98
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$117
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$117)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 99
@99
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$118
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$118)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 100
@100
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 60
@60
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$119
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$119)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 101
@101
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$120
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$120)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 102
@102
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 28
@28
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 38
@38
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$121
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$121)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 103
@103
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 62
@62
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$122
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$122)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 104
@104
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 55
@55
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$123
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$123)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 105
@105
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 14
@14
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$124
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$124)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 106
@106
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 56
@56
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$125
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$125)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 107
@107
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$126
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$126)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 108
@108
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 14
@14
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$127
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$127)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 109
@109
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 29
@29
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 43
@43
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 43
@43
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 43
@43
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 43
@43
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$128
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$128)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 110
@110
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 29
@29
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$129
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$129)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 111
@111
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$130
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$130)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 112
@112
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 31
@31
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$131
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$131)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 113
@113
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 62
@62
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$132
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$132)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 114
@114
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 29
@29
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 55
@55
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 7
@7
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$133
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$133)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 115
@115
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$134
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$134)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 116
@116
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 4
@4
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 28
@28
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$135
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$135)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 117
@117
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$136
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$136)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 118
@118
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$137
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$137)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 119
@119
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 18
@18
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$138
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$138)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 120
@120
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$139
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$139)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 121
@121
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 62
@62
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$140
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$140)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 122
@122
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$141
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$141)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 123
@123
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 56
@56
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 7
@7
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 56
@56
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$142
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$142)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 124
@124
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$143
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$143)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 125
@125
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 7
@7
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 56
@56
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 7
@7
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$144
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$144)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 126
@126
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 38
@38
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 45
@45
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 25
@25
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@return$145
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@12
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(return$145)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Output.create 1
(Output.create)
@0
D=A
@SP
M=M+1
A=M-1
M=D

// push constant 11
@11
D=A
@SP
M=M+1
A=M-1
M=D
// call Array.new 1
@return$146
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(return$146)
// pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push static 5
@Output.vm5
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push argument 3
@3
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push argument 4
@4
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push constant 4
@4
D=A
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push argument 5
@5
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push constant 5
@5
D=A
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push argument 6
@6
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push argument 7
@7
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push constant 7
@7
D=A
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push argument 8
@8
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push constant 8
@8
D=A
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push argument 9
@9
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push constant 9
@9
D=A
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push argument 10
@10
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push constant 10
@10
D=A
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push argument 11
@11
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Output.createShiftedMap 4
(Output.createShiftedMap)
@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

// push constant 127
@127
D=A
@SP
M=M+1
A=M-1
M=D
// call Array.new 1
@return$147
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(return$147)
// pop static 6
@SP
AM=M-1
D=M
@Output.vm6
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop local 2
@2
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label WHILE_EXP0
(Output.createShiftedMap$WHILE_EXP0)
// push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 127
@127
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// not
@SP
A=M-1
M=-M
M=M-1
// if-goto WHILE_END0
D=M
@Output.createShiftedMap$WHILE_END0
D;JNE
// push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push static 5
@Output.vm5
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push constant 11
@11
D=A
@SP
M=M+1
A=M-1
M=D
// call Array.new 1
@return$148
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(return$148)
// pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push static 6
@Output.vm6
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop local 3
@3
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label WHILE_EXP1
(Output.createShiftedMap$WHILE_EXP1)
// push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 11
@11
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// not
@SP
A=M-1
M=-M
M=M-1
// if-goto WHILE_END1
D=M
@Output.createShiftedMap$WHILE_END1
D;JNE
// push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 256
@256
D=A
@SP
M=M+1
A=M-1
M=D
// call Math.multiply 2
@return$149
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(return$149)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop local 3
@3
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// goto WHILE_EXP1
@Output.createShiftedMap$WHILE_EXP1
0;JMP
// label WHILE_END1
(Output.createShiftedMap$WHILE_END1)
// push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@eq1
D;JEQ
@SP
A=M-1
M=1
(eq1)
@SP
A=M-1
M=M-1
// if-goto IF_TRUE0
D=M
@Output.createShiftedMap$IF_TRUE0
D;JNE
// goto IF_FALSE0
@Output.createShiftedMap$IF_FALSE0
0;JMP
// label IF_TRUE0
(Output.createShiftedMap$IF_TRUE0)
// push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
// pop local 2
@2
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// goto IF_END0
@Output.createShiftedMap$IF_END0
0;JMP
// label IF_FALSE0
(Output.createShiftedMap$IF_FALSE0)
// push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop local 2
@2
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label IF_END0
(Output.createShiftedMap$IF_END0)
// goto WHILE_EXP0
@Output.createShiftedMap$WHILE_EXP0
0;JMP
// label WHILE_END0
(Output.createShiftedMap$WHILE_END0)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Output.getMap 1
(Output.getMap)
@0
D=A
@SP
M=M+1
A=M-1
M=D

// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 126
@126
D=A
@SP
M=M+1
A=M-1
M=D
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// or
@SP
AM=M-1
D=M
A=A-1
M=D|M
// if-goto IF_TRUE0
D=M
@Output.getMap$IF_TRUE0
D;JNE
// goto IF_FALSE0
@Output.getMap$IF_FALSE0
0;JMP
// label IF_TRUE0
(Output.getMap$IF_TRUE0)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop argument 0
@0
D=A
@ARG
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label IF_FALSE0
(Output.getMap$IF_FALSE0)
// push static 2
@Output.vm2
D=M
@SP
M=M+1
A=M-1
M=D
// if-goto IF_TRUE1
D=M
@Output.getMap$IF_TRUE1
D;JNE
// goto IF_FALSE1
@Output.getMap$IF_FALSE1
0;JMP
// label IF_TRUE1
(Output.getMap$IF_TRUE1)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push static 5
@Output.vm5
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// goto IF_END1
@Output.getMap$IF_END1
0;JMP
// label IF_FALSE1
(Output.getMap$IF_FALSE1)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push static 6
@Output.vm6
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label IF_END1
(Output.getMap$IF_END1)
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Output.drawChar 4
(Output.drawChar)
@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// call Output.getMap 1
@return$150
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.getMap
0;JMP
(return$150)
// pop local 2
@2
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push static 1
@Output.vm1
D=M
@SP
M=M+1
A=M-1
M=D
// pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label WHILE_EXP0
(Output.drawChar$WHILE_EXP0)
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 11
@11
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// not
@SP
A=M-1
M=-M
M=M-1
// if-goto WHILE_END0
D=M
@Output.drawChar$WHILE_END0
D;JNE
// push static 2
@Output.vm2
D=M
@SP
M=M+1
A=M-1
M=D
// if-goto IF_TRUE0
D=M
@Output.drawChar$IF_TRUE0
D;JNE
// goto IF_FALSE0
@Output.drawChar$IF_FALSE0
0;JMP
// label IF_TRUE0
(Output.drawChar$IF_TRUE0)
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push static 4
@Output.vm4
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 256
@256
D=A
@SP
M=M+1
A=M-1
M=D
// neg
@SP
A=M-1
M=-M
// and
@SP
AM=M-1
D=M
A=A-1
M=D&M
// pop local 3
@3
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// goto IF_END0
@Output.drawChar$IF_END0
0;JMP
// label IF_FALSE0
(Output.drawChar$IF_FALSE0)
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push static 4
@Output.vm4
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 255
@255
D=A
@SP
M=M+1
A=M-1
M=D
// and
@SP
AM=M-1
D=M
A=A-1
M=D&M
// pop local 3
@3
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label IF_END0
(Output.drawChar$IF_END0)
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push static 4
@Output.vm4
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// or
@SP
AM=M-1
D=M
A=A-1
M=D|M
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// goto WHILE_EXP0
@Output.drawChar$WHILE_EXP0
0;JMP
// label WHILE_END0
(Output.drawChar$WHILE_END0)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Output.moveCursor 0
(Output.moveCursor)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 22
@22
D=A
@SP
M=M+1
A=M-1
M=D
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// or
@SP
AM=M-1
D=M
A=A-1
M=D|M
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// or
@SP
AM=M-1
D=M
A=A-1
M=D|M
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// or
@SP
AM=M-1
D=M
A=A-1
M=D|M
// if-goto IF_TRUE0
D=M
@Output.moveCursor$IF_TRUE0
D;JNE
// goto IF_FALSE0
@Output.moveCursor$IF_FALSE0
0;JMP
// label IF_TRUE0
(Output.moveCursor$IF_TRUE0)
// push constant 20
@20
D=A
@SP
M=M+1
A=M-1
M=D
// call Sys.error 1
@return$151
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(return$151)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// label IF_FALSE0
(Output.moveCursor$IF_FALSE0)
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
// call Math.divide 2
@return$152
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(return$152)
// pop static 0
@SP
AM=M-1
D=M
@Output.vm0
M=D
// push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 352
@352
D=A
@SP
M=M+1
A=M-1
M=D
// call Math.multiply 2
@return$153
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(return$153)
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push static 0
@Output.vm0
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop static 1
@SP
AM=M-1
D=M
@Output.vm1
M=D
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push static 0
@Output.vm0
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
// call Math.multiply 2
@return$154
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(return$154)
// eq
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@eq1
D;JEQ
@SP
A=M-1
M=1
(eq1)
@SP
A=M-1
M=M-1
// pop static 2
@SP
AM=M-1
D=M
@Output.vm2
M=D
// push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.drawChar 1
@return$155
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.drawChar
0;JMP
(return$155)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Output.printChar 0
(Output.printChar)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// call String.newLine 0
@return$156
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@0
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.newLine
0;JMP
(return$156)
// eq
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@eq1
D;JEQ
@SP
A=M-1
M=1
(eq1)
@SP
A=M-1
M=M-1
// if-goto IF_TRUE0
D=M
@Output.printChar$IF_TRUE0
D;JNE
// goto IF_FALSE0
@Output.printChar$IF_FALSE0
0;JMP
// label IF_TRUE0
(Output.printChar$IF_TRUE0)
// call Output.println 0
@return$157
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@0
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.println
0;JMP
(return$157)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// goto IF_END0
@Output.printChar$IF_END0
0;JMP
// label IF_FALSE0
(Output.printChar$IF_FALSE0)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// call String.backSpace 0
@return$158
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@0
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.backSpace
0;JMP
(return$158)
// eq
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@eq1
D;JEQ
@SP
A=M-1
M=1
(eq1)
@SP
A=M-1
M=M-1
// if-goto IF_TRUE1
D=M
@Output.printChar$IF_TRUE1
D;JNE
// goto IF_FALSE1
@Output.printChar$IF_FALSE1
0;JMP
// label IF_TRUE1
(Output.printChar$IF_TRUE1)
// call Output.backSpace 0
@return$159
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@0
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.backSpace
0;JMP
(return$159)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// goto IF_END1
@Output.printChar$IF_END1
0;JMP
// label IF_FALSE1
(Output.printChar$IF_FALSE1)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// call Output.drawChar 1
@return$160
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.drawChar
0;JMP
(return$160)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push static 2
@Output.vm2
D=M
@SP
M=M+1
A=M-1
M=D
// not
@SP
A=M-1
M=-M
M=M-1
// if-goto IF_TRUE2
D=M
@Output.printChar$IF_TRUE2
D;JNE
// goto IF_FALSE2
@Output.printChar$IF_FALSE2
0;JMP
// label IF_TRUE2
(Output.printChar$IF_TRUE2)
// push static 0
@Output.vm0
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop static 0
@SP
AM=M-1
D=M
@Output.vm0
M=D
// push static 1
@Output.vm1
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop static 1
@SP
AM=M-1
D=M
@Output.vm1
M=D
// label IF_FALSE2
(Output.printChar$IF_FALSE2)
// push static 0
@Output.vm0
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@eq1
D;JEQ
@SP
A=M-1
M=1
(eq1)
@SP
A=M-1
M=M-1
// if-goto IF_TRUE3
D=M
@Output.printChar$IF_TRUE3
D;JNE
// goto IF_FALSE3
@Output.printChar$IF_FALSE3
0;JMP
// label IF_TRUE3
(Output.printChar$IF_TRUE3)
// call Output.println 0
@return$161
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@0
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.println
0;JMP
(return$161)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// goto IF_END3
@Output.printChar$IF_END3
0;JMP
// label IF_FALSE3
(Output.printChar$IF_FALSE3)
// push static 2
@Output.vm2
D=M
@SP
M=M+1
A=M-1
M=D
// not
@SP
A=M-1
M=-M
M=M-1
// pop static 2
@SP
AM=M-1
D=M
@Output.vm2
M=D
// label IF_END3
(Output.printChar$IF_END3)
// label IF_END1
(Output.printChar$IF_END1)
// label IF_END0
(Output.printChar$IF_END0)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Output.printString 2
(Output.printString)
@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// call String.length 1
@return$162
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.length
0;JMP
(return$162)
// pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label WHILE_EXP0
(Output.printString$WHILE_EXP0)
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// not
@SP
A=M-1
M=-M
M=M-1
// if-goto WHILE_END0
D=M
@Output.printString$WHILE_END0
D;JNE
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// call String.charAt 2
@return$163
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.charAt
0;JMP
(return$163)
// call Output.printChar 1
@return$164
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printChar
0;JMP
(return$164)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// goto WHILE_EXP0
@Output.printString$WHILE_EXP0
0;JMP
// label WHILE_END0
(Output.printString$WHILE_END0)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Output.printInt 0
(Output.printInt)
// push static 3
@Output.vm3
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// call String.setInt 2
@return$165
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.setInt
0;JMP
(return$165)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push static 3
@Output.vm3
D=M
@SP
M=M+1
A=M-1
M=D
// call Output.printString 1
@return$166
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printString
0;JMP
(return$166)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Output.println 0
(Output.println)
// push static 1
@Output.vm1
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 352
@352
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push static 0
@Output.vm0
D=M
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// pop static 1
@SP
AM=M-1
D=M
@Output.vm1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop static 0
@SP
AM=M-1
D=M
@Output.vm0
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// not
@SP
A=M-1
M=-M
M=M-1
// pop static 2
@SP
AM=M-1
D=M
@Output.vm2
M=D
// push static 1
@Output.vm1
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 8128
@8128
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@eq1
D;JEQ
@SP
A=M-1
M=1
(eq1)
@SP
A=M-1
M=M-1
// if-goto IF_TRUE0
D=M
@Output.println$IF_TRUE0
D;JNE
// goto IF_FALSE0
@Output.println$IF_FALSE0
0;JMP
// label IF_TRUE0
(Output.println$IF_TRUE0)
// push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
// pop static 1
@SP
AM=M-1
D=M
@Output.vm1
M=D
// label IF_FALSE0
(Output.println$IF_FALSE0)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Output.backSpace 0
(Output.backSpace)
// push static 2
@Output.vm2
D=M
@SP
M=M+1
A=M-1
M=D
// if-goto IF_TRUE0
D=M
@Output.backSpace$IF_TRUE0
D;JNE
// goto IF_FALSE0
@Output.backSpace$IF_FALSE0
0;JMP
// label IF_TRUE0
(Output.backSpace$IF_TRUE0)
// push static 0
@Output.vm0
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// if-goto IF_TRUE1
D=M
@Output.backSpace$IF_TRUE1
D;JNE
// goto IF_FALSE1
@Output.backSpace$IF_FALSE1
0;JMP
// label IF_TRUE1
(Output.backSpace$IF_TRUE1)
// push static 0
@Output.vm0
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// pop static 0
@SP
AM=M-1
D=M
@Output.vm0
M=D
// push static 1
@Output.vm1
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// pop static 1
@SP
AM=M-1
D=M
@Output.vm1
M=D
// goto IF_END1
@Output.backSpace$IF_END1
0;JMP
// label IF_FALSE1
(Output.backSpace$IF_FALSE1)
// push constant 31
@31
D=A
@SP
M=M+1
A=M-1
M=D
// pop static 0
@SP
AM=M-1
D=M
@Output.vm0
M=D
// push static 1
@Output.vm1
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@eq1
D;JEQ
@SP
A=M-1
M=1
(eq1)
@SP
A=M-1
M=M-1
// if-goto IF_TRUE2
D=M
@Output.backSpace$IF_TRUE2
D;JNE
// goto IF_FALSE2
@Output.backSpace$IF_FALSE2
0;JMP
// label IF_TRUE2
(Output.backSpace$IF_TRUE2)
// push constant 8128
@8128
D=A
@SP
M=M+1
A=M-1
M=D
// pop static 1
@SP
AM=M-1
D=M
@Output.vm1
M=D
// label IF_FALSE2
(Output.backSpace$IF_FALSE2)
// push static 1
@Output.vm1
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 321
@321
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// pop static 1
@SP
AM=M-1
D=M
@Output.vm1
M=D
// label IF_END1
(Output.backSpace$IF_END1)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop static 2
@SP
AM=M-1
D=M
@Output.vm2
M=D
// goto IF_END0
@Output.backSpace$IF_END0
0;JMP
// label IF_FALSE0
(Output.backSpace$IF_FALSE0)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// not
@SP
A=M-1
M=-M
M=M-1
// pop static 2
@SP
AM=M-1
D=M
@Output.vm2
M=D
// label IF_END0
(Output.backSpace$IF_END0)
// push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.drawChar 1
@return$167
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.drawChar
0;JMP
(return$167)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Screen.init 1
(Screen.init)
@0
D=A
@SP
M=M+1
A=M-1
M=D

// push constant 16384
@16384
D=A
@SP
M=M+1
A=M-1
M=D
// pop static 1
@SP
AM=M-1
D=M
@Screen.vm1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// not
@SP
A=M-1
M=-M
M=M-1
// pop static 2
@SP
AM=M-1
D=M
@Screen.vm2
M=D
// push constant 17
@17
D=A
@SP
M=M+1
A=M-1
M=D
// call Array.new 1
@return$168
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(return$168)
// pop static 0
@SP
AM=M-1
D=M
@Screen.vm0
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push static 0
@Screen.vm0
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label WHILE_EXP0
(Screen.init$WHILE_EXP0)
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 16
@16
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// not
@SP
A=M-1
M=-M
M=M-1
// if-goto WHILE_END0
D=M
@Screen.init$WHILE_END0
D;JNE
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push static 0
@Screen.vm0
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// push static 0
@Screen.vm0
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// push static 0
@Screen.vm0
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// goto WHILE_EXP0
@Screen.init$WHILE_EXP0
0;JMP
// label WHILE_END0
(Screen.init$WHILE_END0)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Screen.clearScreen 1
(Screen.clearScreen)
@0
D=A
@SP
M=M+1
A=M-1
M=D

// label WHILE_EXP0
(Screen.clearScreen$WHILE_EXP0)
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 8192
@8192
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// not
@SP
A=M-1
M=-M
M=M-1
// if-goto WHILE_END0
D=M
@Screen.clearScreen$WHILE_END0
D;JNE
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push static 1
@Screen.vm1
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// goto WHILE_EXP0
@Screen.clearScreen$WHILE_EXP0
0;JMP
// label WHILE_END0
(Screen.clearScreen$WHILE_END0)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Screen.updateLocation 0
(Screen.updateLocation)
// push static 2
@Screen.vm2
D=M
@SP
M=M+1
A=M-1
M=D
// if-goto IF_TRUE0
D=M
@Screen.updateLocation$IF_TRUE0
D;JNE
// goto IF_FALSE0
@Screen.updateLocation$IF_FALSE0
0;JMP
// label IF_TRUE0
(Screen.updateLocation$IF_TRUE0)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push static 1
@Screen.vm1
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push static 1
@Screen.vm1
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// or
@SP
AM=M-1
D=M
A=A-1
M=D|M
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// goto IF_END0
@Screen.updateLocation$IF_END0
0;JMP
// label IF_FALSE0
(Screen.updateLocation$IF_FALSE0)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push static 1
@Screen.vm1
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push static 1
@Screen.vm1
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// not
@SP
A=M-1
M=-M
M=M-1
// and
@SP
AM=M-1
D=M
A=A-1
M=D&M
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label IF_END0
(Screen.updateLocation$IF_END0)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Screen.setColor 0
(Screen.setColor)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop static 2
@SP
AM=M-1
D=M
@Screen.vm2
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Screen.drawPixel 3
(Screen.drawPixel)
@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 511
@511
D=A
@SP
M=M+1
A=M-1
M=D
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// or
@SP
AM=M-1
D=M
A=A-1
M=D|M
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// or
@SP
AM=M-1
D=M
A=A-1
M=D|M
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 255
@255
D=A
@SP
M=M+1
A=M-1
M=D
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// or
@SP
AM=M-1
D=M
A=A-1
M=D|M
// if-goto IF_TRUE0
D=M
@Screen.drawPixel$IF_TRUE0
D;JNE
// goto IF_FALSE0
@Screen.drawPixel$IF_FALSE0
0;JMP
// label IF_TRUE0
(Screen.drawPixel$IF_TRUE0)
// push constant 7
@7
D=A
@SP
M=M+1
A=M-1
M=D
// call Sys.error 1
@return$169
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(return$169)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// label IF_FALSE0
(Screen.drawPixel$IF_FALSE0)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 16
@16
D=A
@SP
M=M+1
A=M-1
M=D
// call Math.divide 2
@return$170
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(return$170)
// pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 16
@16
D=A
@SP
M=M+1
A=M-1
M=D
// call Math.multiply 2
@return$171
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(return$171)
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
// call Math.multiply 2
@return$172
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(return$172)
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop local 2
@2
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push static 0
@Screen.vm0
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// call Screen.updateLocation 2
@return$173
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.updateLocation
0;JMP
(return$173)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Screen.drawConditional 0
(Screen.drawConditional)
// push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// if-goto IF_TRUE0
D=M
@Screen.drawConditional$IF_TRUE0
D;JNE
// goto IF_FALSE0
@Screen.drawConditional$IF_FALSE0
0;JMP
// label IF_TRUE0
(Screen.drawConditional$IF_TRUE0)
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// call Screen.drawPixel 2
@return$174
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawPixel
0;JMP
(return$174)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// goto IF_END0
@Screen.drawConditional$IF_END0
0;JMP
// label IF_FALSE0
(Screen.drawConditional$IF_FALSE0)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// call Screen.drawPixel 2
@return$175
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawPixel
0;JMP
(return$175)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// label IF_END0
(Screen.drawConditional$IF_END0)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Screen.drawLine 11
(Screen.drawLine)
@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 511
@511
D=A
@SP
M=M+1
A=M-1
M=D
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// or
@SP
AM=M-1
D=M
A=A-1
M=D|M
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// or
@SP
AM=M-1
D=M
A=A-1
M=D|M
// push argument 3
@3
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 255
@255
D=A
@SP
M=M+1
A=M-1
M=D
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// or
@SP
AM=M-1
D=M
A=A-1
M=D|M
// if-goto IF_TRUE0
D=M
@Screen.drawLine$IF_TRUE0
D;JNE
// goto IF_FALSE0
@Screen.drawLine$IF_FALSE0
0;JMP
// label IF_TRUE0
(Screen.drawLine$IF_TRUE0)
// push constant 8
@8
D=A
@SP
M=M+1
A=M-1
M=D
// call Sys.error 1
@return$176
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(return$176)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// label IF_FALSE0
(Screen.drawLine$IF_FALSE0)
// push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// call Math.abs 1
@return$177
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.abs
0;JMP
(return$177)
// pop local 3
@3
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push argument 3
@3
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// call Math.abs 1
@return$178
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.abs
0;JMP
(return$178)
// pop local 2
@2
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// pop local 6
@6
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 6
@6
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 3
@3
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// and
@SP
AM=M-1
D=M
A=A-1
M=D&M
// push local 6
@6
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// not
@SP
A=M-1
M=-M
M=M-1
// push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// and
@SP
AM=M-1
D=M
A=A-1
M=D&M
// or
@SP
AM=M-1
D=M
A=A-1
M=D|M
// if-goto IF_TRUE1
D=M
@Screen.drawLine$IF_TRUE1
D;JNE
// goto IF_FALSE1
@Screen.drawLine$IF_FALSE1
0;JMP
// label IF_TRUE1
(Screen.drawLine$IF_TRUE1)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop local 4
@4
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop argument 0
@0
D=A
@ARG
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 4
@4
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop argument 2
@2
D=A
@ARG
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop local 4
@4
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push argument 3
@3
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop argument 1
@1
D=A
@ARG
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 4
@4
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop argument 3
@3
D=A
@ARG
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label IF_FALSE1
(Screen.drawLine$IF_FALSE1)
// push local 6
@6
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// if-goto IF_TRUE2
D=M
@Screen.drawLine$IF_TRUE2
D;JNE
// goto IF_FALSE2
@Screen.drawLine$IF_FALSE2
0;JMP
// label IF_TRUE2
(Screen.drawLine$IF_TRUE2)
// push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop local 4
@4
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop local 3
@3
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 4
@4
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop local 2
@2
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push argument 3
@3
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop local 8
@8
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// pop local 7
@7
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// goto IF_END2
@Screen.drawLine$IF_END2
0;JMP
// label IF_FALSE2
(Screen.drawLine$IF_FALSE2)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop local 8
@8
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 3
@3
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// pop local 7
@7
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label IF_END2
(Screen.drawLine$IF_END2)
// push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
// push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// call Math.multiply 2
@return$179
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(return$179)
// push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// pop local 5
@5
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
// push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// call Math.multiply 2
@return$180
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(return$180)
// pop local 9
@9
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
// push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// call Math.multiply 2
@return$181
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(return$181)
// pop local 10
@10
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 6
@6
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// call Screen.drawConditional 3
@return$182
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@3
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawConditional
0;JMP
(return$182)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// label WHILE_EXP0
(Screen.drawLine$WHILE_EXP0)
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 8
@8
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// not
@SP
A=M-1
M=-M
M=M-1
// if-goto WHILE_END0
D=M
@Screen.drawLine$WHILE_END0
D;JNE
// push local 5
@5
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// if-goto IF_TRUE3
D=M
@Screen.drawLine$IF_TRUE3
D;JNE
// goto IF_FALSE3
@Screen.drawLine$IF_FALSE3
0;JMP
// label IF_TRUE3
(Screen.drawLine$IF_TRUE3)
// push local 5
@5
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 9
@9
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop local 5
@5
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// goto IF_END3
@Screen.drawLine$IF_END3
0;JMP
// label IF_FALSE3
(Screen.drawLine$IF_FALSE3)
// push local 5
@5
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 10
@10
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop local 5
@5
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 7
@7
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// if-goto IF_TRUE4
D=M
@Screen.drawLine$IF_TRUE4
D;JNE
// goto IF_FALSE4
@Screen.drawLine$IF_FALSE4
0;JMP
// label IF_TRUE4
(Screen.drawLine$IF_TRUE4)
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// goto IF_END4
@Screen.drawLine$IF_END4
0;JMP
// label IF_FALSE4
(Screen.drawLine$IF_FALSE4)
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label IF_END4
(Screen.drawLine$IF_END4)
// label IF_END3
(Screen.drawLine$IF_END3)
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 6
@6
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// call Screen.drawConditional 3
@return$183
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@3
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawConditional
0;JMP
(return$183)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// goto WHILE_EXP0
@Screen.drawLine$WHILE_EXP0
0;JMP
// label WHILE_END0
(Screen.drawLine$WHILE_END0)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Screen.drawRectangle 9
(Screen.drawRectangle)
@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 3
@3
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// or
@SP
AM=M-1
D=M
A=A-1
M=D|M
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// or
@SP
AM=M-1
D=M
A=A-1
M=D|M
// push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 511
@511
D=A
@SP
M=M+1
A=M-1
M=D
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// or
@SP
AM=M-1
D=M
A=A-1
M=D|M
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// or
@SP
AM=M-1
D=M
A=A-1
M=D|M
// push argument 3
@3
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 255
@255
D=A
@SP
M=M+1
A=M-1
M=D
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// or
@SP
AM=M-1
D=M
A=A-1
M=D|M
// if-goto IF_TRUE0
D=M
@Screen.drawRectangle$IF_TRUE0
D;JNE
// goto IF_FALSE0
@Screen.drawRectangle$IF_FALSE0
0;JMP
// label IF_TRUE0
(Screen.drawRectangle$IF_TRUE0)
// push constant 9
@9
D=A
@SP
M=M+1
A=M-1
M=D
// call Sys.error 1
@return$184
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(return$184)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// label IF_FALSE0
(Screen.drawRectangle$IF_FALSE0)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 16
@16
D=A
@SP
M=M+1
A=M-1
M=D
// call Math.divide 2
@return$185
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(return$185)
// pop local 3
@3
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 16
@16
D=A
@SP
M=M+1
A=M-1
M=D
// call Math.multiply 2
@return$186
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(return$186)
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// pop local 7
@7
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 16
@16
D=A
@SP
M=M+1
A=M-1
M=D
// call Math.divide 2
@return$187
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(return$187)
// pop local 4
@4
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 4
@4
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 16
@16
D=A
@SP
M=M+1
A=M-1
M=D
// call Math.multiply 2
@return$188
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(return$188)
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// pop local 8
@8
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 7
@7
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push static 0
@Screen.vm0
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// not
@SP
A=M-1
M=-M
M=M-1
// pop local 6
@6
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 8
@8
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push static 0
@Screen.vm0
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// pop local 5
@5
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
// call Math.multiply 2
@return$189
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(return$189)
// push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 4
@4
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// pop local 2
@2
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label WHILE_EXP0
(Screen.drawRectangle$WHILE_EXP0)
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 3
@3
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// not
@SP
A=M-1
M=-M
M=M-1
// not
@SP
A=M-1
M=-M
M=M-1
// if-goto WHILE_END0
D=M
@Screen.drawRectangle$WHILE_END0
D;JNE
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@eq1
D;JEQ
@SP
A=M-1
M=1
(eq1)
@SP
A=M-1
M=M-1
// if-goto IF_TRUE1
D=M
@Screen.drawRectangle$IF_TRUE1
D;JNE
// goto IF_FALSE1
@Screen.drawRectangle$IF_FALSE1
0;JMP
// label IF_TRUE1
(Screen.drawRectangle$IF_TRUE1)
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 5
@5
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 6
@6
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// and
@SP
AM=M-1
D=M
A=A-1
M=D&M
// call Screen.updateLocation 2
@return$190
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.updateLocation
0;JMP
(return$190)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// goto IF_END1
@Screen.drawRectangle$IF_END1
0;JMP
// label IF_FALSE1
(Screen.drawRectangle$IF_FALSE1)
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 6
@6
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// call Screen.updateLocation 2
@return$191
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.updateLocation
0;JMP
(return$191)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label WHILE_EXP1
(Screen.drawRectangle$WHILE_EXP1)
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// not
@SP
A=M-1
M=-M
M=M-1
// if-goto WHILE_END1
D=M
@Screen.drawRectangle$WHILE_END1
D;JNE
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// neg
@SP
A=M-1
M=-M
// call Screen.updateLocation 2
@return$192
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.updateLocation
0;JMP
(return$192)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// goto WHILE_EXP1
@Screen.drawRectangle$WHILE_EXP1
0;JMP
// label WHILE_END1
(Screen.drawRectangle$WHILE_END1)
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 5
@5
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// call Screen.updateLocation 2
@return$193
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.updateLocation
0;JMP
(return$193)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// label IF_END1
(Screen.drawRectangle$IF_END1)
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop argument 1
@1
D=A
@ARG
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// goto WHILE_EXP0
@Screen.drawRectangle$WHILE_EXP0
0;JMP
// label WHILE_END0
(Screen.drawRectangle$WHILE_END0)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Screen.drawHorizontal 11
(Screen.drawHorizontal)
@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// call Math.min 2
@return$194
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.min
0;JMP
(return$194)
// pop local 7
@7
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// call Math.max 2
@return$195
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.max
0;JMP
(return$195)
// pop local 8
@8
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// neg
@SP
A=M-1
M=-M
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 256
@256
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// and
@SP
AM=M-1
D=M
A=A-1
M=D&M
// push local 7
@7
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 512
@512
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// and
@SP
AM=M-1
D=M
A=A-1
M=D&M
// push local 8
@8
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// neg
@SP
A=M-1
M=-M
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// and
@SP
AM=M-1
D=M
A=A-1
M=D&M
// if-goto IF_TRUE0
D=M
@Screen.drawHorizontal$IF_TRUE0
D;JNE
// goto IF_FALSE0
@Screen.drawHorizontal$IF_FALSE0
0;JMP
// label IF_TRUE0
(Screen.drawHorizontal$IF_TRUE0)
// push local 7
@7
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Math.max 2
@return$196
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.max
0;JMP
(return$196)
// pop local 7
@7
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 8
@8
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 511
@511
D=A
@SP
M=M+1
A=M-1
M=D
// call Math.min 2
@return$197
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.min
0;JMP
(return$197)
// pop local 8
@8
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 7
@7
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 16
@16
D=A
@SP
M=M+1
A=M-1
M=D
// call Math.divide 2
@return$198
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(return$198)
// pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 7
@7
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 16
@16
D=A
@SP
M=M+1
A=M-1
M=D
// call Math.multiply 2
@return$199
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(return$199)
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// pop local 9
@9
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 8
@8
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 16
@16
D=A
@SP
M=M+1
A=M-1
M=D
// call Math.divide 2
@return$200
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(return$200)
// pop local 2
@2
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 8
@8
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 16
@16
D=A
@SP
M=M+1
A=M-1
M=D
// call Math.multiply 2
@return$201
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(return$201)
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// pop local 10
@10
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 9
@9
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push static 0
@Screen.vm0
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// not
@SP
A=M-1
M=-M
M=M-1
// pop local 5
@5
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 10
@10
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push static 0
@Screen.vm0
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// pop local 4
@4
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
// call Math.multiply 2
@return$202
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(return$202)
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// pop local 6
@6
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 6
@6
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop local 3
@3
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 6
@6
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@eq1
D;JEQ
@SP
A=M-1
M=1
(eq1)
@SP
A=M-1
M=M-1
// if-goto IF_TRUE1
D=M
@Screen.drawHorizontal$IF_TRUE1
D;JNE
// goto IF_FALSE1
@Screen.drawHorizontal$IF_FALSE1
0;JMP
// label IF_TRUE1
(Screen.drawHorizontal$IF_TRUE1)
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 4
@4
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 5
@5
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// and
@SP
AM=M-1
D=M
A=A-1
M=D&M
// call Screen.updateLocation 2
@return$203
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.updateLocation
0;JMP
(return$203)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// goto IF_END1
@Screen.drawHorizontal$IF_END1
0;JMP
// label IF_FALSE1
(Screen.drawHorizontal$IF_FALSE1)
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 5
@5
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// call Screen.updateLocation 2
@return$204
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.updateLocation
0;JMP
(return$204)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label WHILE_EXP0
(Screen.drawHorizontal$WHILE_EXP0)
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// not
@SP
A=M-1
M=-M
M=M-1
// if-goto WHILE_END0
D=M
@Screen.drawHorizontal$WHILE_END0
D;JNE
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// neg
@SP
A=M-1
M=-M
// call Screen.updateLocation 2
@return$205
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.updateLocation
0;JMP
(return$205)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// goto WHILE_EXP0
@Screen.drawHorizontal$WHILE_EXP0
0;JMP
// label WHILE_END0
(Screen.drawHorizontal$WHILE_END0)
// push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 4
@4
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// call Screen.updateLocation 2
@return$206
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.updateLocation
0;JMP
(return$206)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// label IF_END1
(Screen.drawHorizontal$IF_END1)
// label IF_FALSE0
(Screen.drawHorizontal$IF_FALSE0)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Screen.drawSymetric 0
(Screen.drawSymetric)
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 3
@3
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// call Screen.drawHorizontal 3
@return$207
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@3
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawHorizontal
0;JMP
(return$207)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 3
@3
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// call Screen.drawHorizontal 3
@return$208
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@3
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawHorizontal
0;JMP
(return$208)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 3
@3
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 3
@3
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// call Screen.drawHorizontal 3
@return$209
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@3
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawHorizontal
0;JMP
(return$209)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 3
@3
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 3
@3
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// call Screen.drawHorizontal 3
@return$210
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@3
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawHorizontal
0;JMP
(return$210)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Screen.drawCircle 3
(Screen.drawCircle)
@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 511
@511
D=A
@SP
M=M+1
A=M-1
M=D
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// or
@SP
AM=M-1
D=M
A=A-1
M=D|M
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// or
@SP
AM=M-1
D=M
A=A-1
M=D|M
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 255
@255
D=A
@SP
M=M+1
A=M-1
M=D
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// or
@SP
AM=M-1
D=M
A=A-1
M=D|M
// if-goto IF_TRUE0
D=M
@Screen.drawCircle$IF_TRUE0
D;JNE
// goto IF_FALSE0
@Screen.drawCircle$IF_FALSE0
0;JMP
// label IF_TRUE0
(Screen.drawCircle$IF_TRUE0)
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// call Sys.error 1
@return$211
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(return$211)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// label IF_FALSE0
(Screen.drawCircle$IF_FALSE0)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push constant 511
@511
D=A
@SP
M=M+1
A=M-1
M=D
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// or
@SP
AM=M-1
D=M
A=A-1
M=D|M
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// or
@SP
AM=M-1
D=M
A=A-1
M=D|M
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push constant 255
@255
D=A
@SP
M=M+1
A=M-1
M=D
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// or
@SP
AM=M-1
D=M
A=A-1
M=D|M
// if-goto IF_TRUE1
D=M
@Screen.drawCircle$IF_TRUE1
D;JNE
// goto IF_FALSE1
@Screen.drawCircle$IF_FALSE1
0;JMP
// label IF_TRUE1
(Screen.drawCircle$IF_TRUE1)
// push constant 13
@13
D=A
@SP
M=M+1
A=M-1
M=D
// call Sys.error 1
@return$212
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(return$212)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// label IF_FALSE1
(Screen.drawCircle$IF_FALSE1)
// push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// pop local 2
@2
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// call Screen.drawSymetric 4
@return$213
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@4
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawSymetric
0;JMP
(return$213)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// label WHILE_EXP0
(Screen.drawCircle$WHILE_EXP0)
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// not
@SP
A=M-1
M=-M
M=M-1
// if-goto WHILE_END0
D=M
@Screen.drawCircle$WHILE_END0
D;JNE
// push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// if-goto IF_TRUE2
D=M
@Screen.drawCircle$IF_TRUE2
D;JNE
// goto IF_FALSE2
@Screen.drawCircle$IF_FALSE2
0;JMP
// label IF_TRUE2
(Screen.drawCircle$IF_TRUE2)
// push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// call Math.multiply 2
@return$214
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(return$214)
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop local 2
@2
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// goto IF_END2
@Screen.drawCircle$IF_END2
0;JMP
// label IF_FALSE2
(Screen.drawCircle$IF_FALSE2)
// push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// call Math.multiply 2
@return$215
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(return$215)
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push constant 5
@5
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop local 2
@2
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label IF_END2
(Screen.drawCircle$IF_END2)
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// call Screen.drawSymetric 4
@return$216
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@4
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawSymetric
0;JMP
(return$216)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// goto WHILE_EXP0
@Screen.drawCircle$WHILE_EXP0
0;JMP
// label WHILE_END0
(Screen.drawCircle$WHILE_END0)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function String.new 0
(String.new)
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// call Memory.alloc 1
@return$217
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.alloc
0;JMP
(return$217)
// pop pointer 0
@SP
AM=M-1
D=M
@3
M=D
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// if-goto IF_TRUE0
D=M
@String.new$IF_TRUE0
D;JNE
// goto IF_FALSE0
@String.new$IF_FALSE0
0;JMP
// label IF_TRUE0
(String.new$IF_TRUE0)
// push constant 14
@14
D=A
@SP
M=M+1
A=M-1
M=D
// call Sys.error 1
@return$218
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(return$218)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// label IF_FALSE0
(String.new$IF_FALSE0)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// if-goto IF_TRUE1
D=M
@String.new$IF_TRUE1
D;JNE
// goto IF_FALSE1
@String.new$IF_FALSE1
0;JMP
// label IF_TRUE1
(String.new$IF_TRUE1)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// call Array.new 1
@return$219
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(return$219)
// pop this 1
@1
D=A
@THIS
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label IF_FALSE1
(String.new$IF_FALSE1)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop this 0
@0
D=A
@THIS
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop this 2
@2
D=A
@THIS
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push pointer 0
@3
D=M
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function String.dispose 0
(String.dispose)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop pointer 0
@SP
AM=M-1
D=M
@3
M=D
// push this 0
@0
D=A
@THIS
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// if-goto IF_TRUE0
D=M
@String.dispose$IF_TRUE0
D;JNE
// goto IF_FALSE0
@String.dispose$IF_FALSE0
0;JMP
// label IF_TRUE0
(String.dispose$IF_TRUE0)
// push this 1
@1
D=A
@THIS
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// call Array.dispose 1
@return$220
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.dispose
0;JMP
(return$220)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// label IF_FALSE0
(String.dispose$IF_FALSE0)
// push pointer 0
@3
D=M
@SP
M=M+1
A=M-1
M=D
// call Memory.deAlloc 1
@return$221
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.deAlloc
0;JMP
(return$221)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function String.length 0
(String.length)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop pointer 0
@SP
AM=M-1
D=M
@3
M=D
// push this 2
@2
D=A
@THIS
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function String.charAt 0
(String.charAt)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop pointer 0
@SP
AM=M-1
D=M
@3
M=D
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push this 2
@2
D=A
@THIS
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// or
@SP
AM=M-1
D=M
A=A-1
M=D|M
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push this 2
@2
D=A
@THIS
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// eq
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@eq1
D;JEQ
@SP
A=M-1
M=1
(eq1)
@SP
A=M-1
M=M-1
// or
@SP
AM=M-1
D=M
A=A-1
M=D|M
// if-goto IF_TRUE0
D=M
@String.charAt$IF_TRUE0
D;JNE
// goto IF_FALSE0
@String.charAt$IF_FALSE0
0;JMP
// label IF_TRUE0
(String.charAt$IF_TRUE0)
// push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
// call Sys.error 1
@return$222
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(return$222)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// label IF_FALSE0
(String.charAt$IF_FALSE0)
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push this 1
@1
D=A
@THIS
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function String.setCharAt 0
(String.setCharAt)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop pointer 0
@SP
AM=M-1
D=M
@3
M=D
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push this 2
@2
D=A
@THIS
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// or
@SP
AM=M-1
D=M
A=A-1
M=D|M
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push this 2
@2
D=A
@THIS
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// eq
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@eq1
D;JEQ
@SP
A=M-1
M=1
(eq1)
@SP
A=M-1
M=M-1
// or
@SP
AM=M-1
D=M
A=A-1
M=D|M
// if-goto IF_TRUE0
D=M
@String.setCharAt$IF_TRUE0
D;JNE
// goto IF_FALSE0
@String.setCharAt$IF_FALSE0
0;JMP
// label IF_TRUE0
(String.setCharAt$IF_TRUE0)
// push constant 16
@16
D=A
@SP
M=M+1
A=M-1
M=D
// call Sys.error 1
@return$223
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(return$223)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// label IF_FALSE0
(String.setCharAt$IF_FALSE0)
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push this 1
@1
D=A
@THIS
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function String.appendChar 0
(String.appendChar)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop pointer 0
@SP
AM=M-1
D=M
@3
M=D
// push this 2
@2
D=A
@THIS
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push this 0
@0
D=A
@THIS
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// eq
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@eq1
D;JEQ
@SP
A=M-1
M=1
(eq1)
@SP
A=M-1
M=M-1
// if-goto IF_TRUE0
D=M
@String.appendChar$IF_TRUE0
D;JNE
// goto IF_FALSE0
@String.appendChar$IF_FALSE0
0;JMP
// label IF_TRUE0
(String.appendChar$IF_TRUE0)
// push constant 17
@17
D=A
@SP
M=M+1
A=M-1
M=D
// call Sys.error 1
@return$224
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(return$224)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// label IF_FALSE0
(String.appendChar$IF_FALSE0)
// push this 2
@2
D=A
@THIS
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push this 1
@1
D=A
@THIS
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push this 2
@2
D=A
@THIS
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop this 2
@2
D=A
@THIS
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push pointer 0
@3
D=M
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function String.eraseLastChar 0
(String.eraseLastChar)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop pointer 0
@SP
AM=M-1
D=M
@3
M=D
// push this 2
@2
D=A
@THIS
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@eq1
D;JEQ
@SP
A=M-1
M=1
(eq1)
@SP
A=M-1
M=M-1
// if-goto IF_TRUE0
D=M
@String.eraseLastChar$IF_TRUE0
D;JNE
// goto IF_FALSE0
@String.eraseLastChar$IF_FALSE0
0;JMP
// label IF_TRUE0
(String.eraseLastChar$IF_TRUE0)
// push constant 18
@18
D=A
@SP
M=M+1
A=M-1
M=D
// call Sys.error 1
@return$225
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(return$225)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// label IF_FALSE0
(String.eraseLastChar$IF_FALSE0)
// push this 2
@2
D=A
@THIS
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// pop this 2
@2
D=A
@THIS
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function String.intValue 5
(String.intValue)
@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop pointer 0
@SP
AM=M-1
D=M
@3
M=D
// push this 2
@2
D=A
@THIS
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@eq1
D;JEQ
@SP
A=M-1
M=1
(eq1)
@SP
A=M-1
M=M-1
// if-goto IF_TRUE0
D=M
@String.intValue$IF_TRUE0
D;JNE
// goto IF_FALSE0
@String.intValue$IF_FALSE0
0;JMP
// label IF_TRUE0
(String.intValue$IF_TRUE0)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// label IF_FALSE0
(String.intValue$IF_FALSE0)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// not
@SP
A=M-1
M=-M
M=M-1
// pop local 3
@3
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push this 1
@1
D=A
@THIS
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 45
@45
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@eq1
D;JEQ
@SP
A=M-1
M=1
(eq1)
@SP
A=M-1
M=M-1
// if-goto IF_TRUE1
D=M
@String.intValue$IF_TRUE1
D;JNE
// goto IF_FALSE1
@String.intValue$IF_FALSE1
0;JMP
// label IF_TRUE1
(String.intValue$IF_TRUE1)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// not
@SP
A=M-1
M=-M
M=M-1
// pop local 4
@4
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label IF_FALSE1
(String.intValue$IF_FALSE1)
// label WHILE_EXP0
(String.intValue$WHILE_EXP0)
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push this 2
@2
D=A
@THIS
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// and
@SP
AM=M-1
D=M
A=A-1
M=D&M
// not
@SP
A=M-1
M=-M
M=M-1
// if-goto WHILE_END0
D=M
@String.intValue$WHILE_END0
D;JNE
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push this 1
@1
D=A
@THIS
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// pop local 2
@2
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 9
@9
D=A
@SP
M=M+1
A=M-1
M=D
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// or
@SP
AM=M-1
D=M
A=A-1
M=D|M
// not
@SP
A=M-1
M=-M
M=M-1
// pop local 3
@3
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// if-goto IF_TRUE2
D=M
@String.intValue$IF_TRUE2
D;JNE
// goto IF_FALSE2
@String.intValue$IF_FALSE2
0;JMP
// label IF_TRUE2
(String.intValue$IF_TRUE2)
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 10
@10
D=A
@SP
M=M+1
A=M-1
M=D
// call Math.multiply 2
@return$226
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(return$226)
// push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label IF_FALSE2
(String.intValue$IF_FALSE2)
// goto WHILE_EXP0
@String.intValue$WHILE_EXP0
0;JMP
// label WHILE_END0
(String.intValue$WHILE_END0)
// push local 4
@4
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// if-goto IF_TRUE3
D=M
@String.intValue$IF_TRUE3
D;JNE
// goto IF_FALSE3
@String.intValue$IF_FALSE3
0;JMP
// label IF_TRUE3
(String.intValue$IF_TRUE3)
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// neg
@SP
A=M-1
M=-M
// pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label IF_FALSE3
(String.intValue$IF_FALSE3)
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function String.setInt 4
(String.setInt)
@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

@0
D=A
@SP
M=M+1
A=M-1
M=D

// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop pointer 0
@SP
AM=M-1
D=M
@3
M=D
// push this 0
@0
D=A
@THIS
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@eq1
D;JEQ
@SP
A=M-1
M=1
(eq1)
@SP
A=M-1
M=M-1
// if-goto IF_TRUE0
D=M
@String.setInt$IF_TRUE0
D;JNE
// goto IF_FALSE0
@String.setInt$IF_FALSE0
0;JMP
// label IF_TRUE0
(String.setInt$IF_TRUE0)
// push constant 19
@19
D=A
@SP
M=M+1
A=M-1
M=D
// call Sys.error 1
@return$227
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(return$227)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// label IF_FALSE0
(String.setInt$IF_FALSE0)
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// call Array.new 1
@return$228
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(return$228)
// pop local 2
@2
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// if-goto IF_TRUE1
D=M
@String.setInt$IF_TRUE1
D;JNE
// goto IF_FALSE1
@String.setInt$IF_FALSE1
0;JMP
// label IF_TRUE1
(String.setInt$IF_TRUE1)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// not
@SP
A=M-1
M=-M
M=M-1
// pop local 3
@3
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// neg
@SP
A=M-1
M=-M
// pop argument 1
@1
D=A
@ARG
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label IF_FALSE1
(String.setInt$IF_FALSE1)
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label WHILE_EXP0
(String.setInt$WHILE_EXP0)
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// not
@SP
A=M-1
M=-M
M=M-1
// if-goto WHILE_END0
D=M
@String.setInt$WHILE_END0
D;JNE
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 10
@10
D=A
@SP
M=M+1
A=M-1
M=D
// call Math.divide 2
@return$229
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(return$229)
// pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 10
@10
D=A
@SP
M=M+1
A=M-1
M=D
// call Math.multiply 2
@return$230
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(return$230)
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop argument 1
@1
D=A
@ARG
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// goto WHILE_EXP0
@String.setInt$WHILE_EXP0
0;JMP
// label WHILE_END0
(String.setInt$WHILE_END0)
// push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// if-goto IF_TRUE2
D=M
@String.setInt$IF_TRUE2
D;JNE
// goto IF_FALSE2
@String.setInt$IF_FALSE2
0;JMP
// label IF_TRUE2
(String.setInt$IF_TRUE2)
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push constant 45
@45
D=A
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label IF_FALSE2
(String.setInt$IF_FALSE2)
// push this 0
@0
D=A
@THIS
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// if-goto IF_TRUE3
D=M
@String.setInt$IF_TRUE3
D;JNE
// goto IF_FALSE3
@String.setInt$IF_FALSE3
0;JMP
// label IF_TRUE3
(String.setInt$IF_TRUE3)
// push constant 19
@19
D=A
@SP
M=M+1
A=M-1
M=D
// call Sys.error 1
@return$231
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(return$231)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// label IF_FALSE3
(String.setInt$IF_FALSE3)
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@eq1
D;JEQ
@SP
A=M-1
M=1
(eq1)
@SP
A=M-1
M=M-1
// if-goto IF_TRUE4
D=M
@String.setInt$IF_TRUE4
D;JNE
// goto IF_FALSE4
@String.setInt$IF_FALSE4
0;JMP
// label IF_TRUE4
(String.setInt$IF_TRUE4)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push this 1
@1
D=A
@THIS
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// pop this 2
@2
D=A
@THIS
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// goto IF_END4
@String.setInt$IF_END4
0;JMP
// label IF_FALSE4
(String.setInt$IF_FALSE4)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop this 2
@2
D=A
@THIS
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label WHILE_EXP1
(String.setInt$WHILE_EXP1)
// push this 2
@2
D=A
@THIS
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// not
@SP
A=M-1
M=-M
M=M-1
// if-goto WHILE_END1
D=M
@String.setInt$WHILE_END1
D;JNE
// push this 2
@2
D=A
@THIS
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push this 1
@1
D=A
@THIS
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push this 2
@2
D=A
@THIS
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@4
M=D
// push temp 0
@5
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// push this 2
@2
D=A
@THIS
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// pop this 2
@2
D=A
@THIS
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// goto WHILE_EXP1
@String.setInt$WHILE_EXP1
0;JMP
// label WHILE_END1
(String.setInt$WHILE_END1)
// label IF_END4
(String.setInt$IF_END4)
// push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// call Array.dispose 1
@return$232
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.dispose
0;JMP
(return$232)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function String.newLine 0
(String.newLine)
// push constant 128
@128
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function String.backSpace 0
(String.backSpace)
// push constant 129
@129
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function String.doubleQuote 0
(String.doubleQuote)
// push constant 34
@34
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Sys.init 0
(Sys.init)
// call Memory.init 0
@return$233
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@0
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.init
0;JMP
(return$233)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// call Math.init 0
@return$234
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@0
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.init
0;JMP
(return$234)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// call Screen.init 0
@return$235
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@0
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.init
0;JMP
(return$235)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// call Output.init 0
@return$236
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@0
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.init
0;JMP
(return$236)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// call Keyboard.init 0
@return$237
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@0
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Keyboard.init
0;JMP
(return$237)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// call Main.main 0
@return$238
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@0
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.main
0;JMP
(return$238)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// call Sys.halt 0
@return$239
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@0
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.halt
0;JMP
(return$239)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Sys.halt 0
(Sys.halt)
// label WHILE_EXP0
(Sys.halt$WHILE_EXP0)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// not
@SP
A=M-1
M=-M
M=M-1
// not
@SP
A=M-1
M=-M
M=M-1
// if-goto WHILE_END0
D=M
@Sys.halt$WHILE_END0
D;JNE
// goto WHILE_EXP0
@Sys.halt$WHILE_EXP0
0;JMP
// label WHILE_END0
(Sys.halt$WHILE_END0)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Sys.wait 1
(Sys.wait)
@0
D=A
@SP
M=M+1
A=M-1
M=D

// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@lt1
D;JLT
@SP
A=M-1
M=0
@ltEnd1
0;JMP
(lt1)
@SP
A=M-1
M=-1
(ltEnd1)
// if-goto IF_TRUE0
D=M
@Sys.wait$IF_TRUE0
D;JNE
// goto IF_FALSE0
@Sys.wait$IF_FALSE0
0;JMP
// label IF_TRUE0
(Sys.wait$IF_TRUE0)
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// call Sys.error 1
@return$240
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(return$240)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// label IF_FALSE0
(Sys.wait$IF_FALSE0)
// label WHILE_EXP0
(Sys.wait$WHILE_EXP0)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// not
@SP
A=M-1
M=-M
M=M-1
// if-goto WHILE_END0
D=M
@Sys.wait$WHILE_END0
D;JNE
// push constant 50
@50
D=A
@SP
M=M+1
A=M-1
M=D
// pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// label WHILE_EXP1
(Sys.wait$WHILE_EXP1)
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// gt
@SP
AM=M-1
D=M
A=A-1
M=M-D
D=M
@gt1
D;JGT
@SP
A=M-1
M=0
@gtEnd1
0;JMP
(gt1)
@SP
A=M-1
M=-1
(gtEnd1)
// not
@SP
A=M-1
M=-M
M=M-1
// if-goto WHILE_END1
D=M
@Sys.wait$WHILE_END1
D;JNE
// push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// goto WHILE_EXP1
@Sys.wait$WHILE_EXP1
0;JMP
// label WHILE_END1
(Sys.wait$WHILE_END1)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// pop argument 0
@0
D=A
@ARG
D=D+M
@13
M=D
@SP
M=M-1
A=M
D=M
@13
A=M
M=D
// goto WHILE_EXP0
@Sys.wait$WHILE_EXP0
0;JMP
// label WHILE_END0
(Sys.wait$WHILE_END0)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Sys.error 0
(Sys.error)
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// call String.new 1
@return$241
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.new
0;JMP
(return$241)
// push constant 69
@69
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@return$242
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(return$242)
// push constant 82
@82
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@return$243
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(return$243)
// push constant 82
@82
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@return$244
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(return$244)
// call Output.printString 1
@return$245
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printString
0;JMP
(return$245)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// call Output.printInt 1
@return$246
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printInt
0;JMP
(return$246)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// call Sys.halt 0
@return$247
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@0
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.halt
0;JMP
(return$247)
// pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@13
M=D
@13
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
A=M
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
D=M
@15
M=D-1
A=M
D=M
@THAT
M=D
@15
M=M-1
A=M
D=M
@THIS
M=D
@15
M=M-1
A=M
D=M
@ARG
M=D
@15
M=M-1
A=M
D=M
@LCL
M=D
@14
A=M
0;JMP
